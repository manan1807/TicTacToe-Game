{"version":3,"sources":["logo.svg","Components/TicTacToe.jsx","App.js","reportWebVitals.js","index.js"],"names":["Square","props","Button","variant","onClick","value","Board","useState","squarearr","setSquarearr","XisNext","setXisNext","renderSquare","i","squares","slice","console","log","handleClick","status","winner","lines","length","a","b","c","CalculateWinner","Alert","game","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAe,I,4BCEf,SAASA,EAAOC,GACZ,OAEI,cAACC,EAAA,EAAD,CAAQC,QAAS,YACjBC,QAAS,WAAQH,EAAMG,WADvB,SACqCH,EAAMI,QAInD,SAASC,IAAS,IAAD,EAEqBC,mBAAS,IAF9B,mBAENC,EAFM,KAEKC,EAFL,OAGiBF,mBAAS,QAH1B,mBAGNG,EAHM,KAGGC,EAHH,KAmBb,SAASC,EAAaC,GAClB,OAAO,cAACb,EAAD,CACHI,QAAS,kBAhBjB,SAAqBS,GACjB,IAAMC,EAAUN,EAAUO,QAItBD,EAAQD,KAGZC,EAAQD,GAAKH,EAAU,IAAM,IAC7BM,QAAQC,IAAIH,EAAQD,IACpBJ,EAAaK,GACbH,GAAYD,IAKOQ,CAAYL,IAC3BR,MAAOG,EAAUK,KAwBzB,IACIM,EADEC,EApBN,SAAyBZ,GAYrB,IAXA,IAAMa,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGFR,EAAI,EAAGA,EAAIQ,EAAMC,OAAQT,IAAK,CAAC,IAAD,cACjBQ,EAAMR,GADW,GAC5BU,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAIjB,EAAUe,IAAMf,EAAUe,KAAOf,EAAUgB,IAAMhB,EAAUe,KAAOf,EAAUiB,GAC5E,OAAOjB,EAAUe,GAGzB,OAAO,KAEIG,CAAgBlB,GAQ/B,OALIW,EADAC,EACS,SAAWA,EAGX,eAAiBV,EAAU,IAAM,KAI1C,gCACI,8BACR,cAACiB,EAAA,EAAD,CAAOxB,QAAQ,OAAf,SAAwBgB,MAEhB,gCACKP,EAAa,GACbA,EAAa,GACbA,EAAa,MAElB,gCACKA,EAAa,GACbA,EAAa,GACbA,EAAa,MAElB,gCACKA,EAAa,GACbA,EAAa,GACbA,EAAa,SAQf,SAASgB,IACpB,OACI,8BACA,cAACtB,EAAD,MCnFOuB,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3eb8e142.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { useState } from 'react'\r\nimport { Button,Alert} from 'react-bootstrap'\r\nfunction Square(props) {\r\n    return (\r\n\r\n        <Button variant= \"secondary\"\r\n        onClick={() => { props.onClick() }}>{props.value}</Button>\r\n     \r\n    )\r\n}\r\nfunction Board() {\r\n\r\n    const [squarearr, setSquarearr] = useState([]); \r\n    const [XisNext, setXisNext] = useState(\"true\");\r\n\r\n    function handleClick(i) {\r\n        const squares = squarearr.slice();\r\n\r\n\r\n        //console.log(squares[i]);\r\n        if (squares[i]) {\r\n            return\r\n        }\r\n        squares[i] = XisNext ? 'X' : 'O';\r\n        console.log(squares[i]);\r\n        setSquarearr(squares);\r\n        setXisNext(!XisNext);\r\n    }\r\n\r\n    function renderSquare(i) {\r\n        return <Square\r\n            onClick={() => handleClick(i)}\r\n            value={squarearr[i]}\r\n        />\r\n    }\r\n\r\n    function CalculateWinner(squarearr) {\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (squarearr[a] && squarearr[a] === squarearr[b] && squarearr[a] === squarearr[c]) {\r\n                return squarearr[a];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    const winner = CalculateWinner(squarearr);\r\n    let status;\r\n    if (winner) {\r\n        status = \"Winner\" + winner;\r\n    }\r\n    else {\r\n        status = \"NextPlayer:\" + (XisNext ? 'X' : 'O');\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            <div>\r\n    <Alert variant=\"dark\" >{status}</Alert>\r\n                </div>\r\n            <div>\r\n                {renderSquare(0)}\r\n                {renderSquare(1)}\r\n                {renderSquare(2)}\r\n            </div>\r\n            <div>\r\n                {renderSquare(3)}\r\n                {renderSquare(4)}\r\n                {renderSquare(5)}\r\n            </div>\r\n            <div>\r\n                {renderSquare(6)}\r\n                {renderSquare(7)}\r\n                {renderSquare(8)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default function game() {\r\n    return (\r\n        <div >\r\n        <Board />\r\n        </div>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport TicTacToe from './Components/TicTacToe'\nfunction App() {\n  return (\n    <div>\n      <TicTacToe/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}